name: conda-build
on:
  push:
    branches-ignore:
      - master
jobs:
  build-job:
    runs-on: ubuntu-20.04
    env:
      DEPS_DIR: /home/tip/deps 
      BUILD_DIR: build-profile
      CI_COMMIT_TAG: ${{github.ref_name}}
      CI_COMMIT_SHORT_SHA: ${{github.sha}}
      CODE_COV_FNAME: overall-coverage.xml
    container:
      image: registry.il2.dso.mil/skicamp/project-opal/tip/dev:tip-ghbuild-0.2
      credentials:
        username: ${{ secrets.TIP_REGISTRY_USER }}
        password: ${{ secrets.TIP_REGISTRY_PASS }}
      env:
        DEPS_DIR: ${{ env.DEPS_DIR }}
        BUILD_DIR: ${{ env.BUILD_DIR }}
        CI_COMMIT_TAG: ${{ github.ref_name }}
        CI_COMMIT_SHORT_SHA: ${{ github.sha }}
        CODE_COV_FNAME: ${{ env.CODE_COV_FNAME }}
      options: --cpus 2
    steps: 
      - uses: actions/checkout@v2
      - name: home debug
        run: pwd && ls $HOME
        # Github will clear cache that hasn't been accessed in 
        # 7 days, so previously cached and now merged or old
        # branches will be automatically removed.
      - name: Cache native build artifacts
        id: cache-build-artifacts
        uses: actions/cache@v2
        with: 
          path: ./${{ env.BUILD_DIR }}
          key: ${{ runner.os }}-${{ github.ref_name }}-build-cache
      - name: Link deps
        run: ln -fs $DEPS_DIR ./deps
      - name: Configure CMake
        if: steps.cache-build-artifacts.outputs.cache-hit != 'true'
        run: |
          mkdir $BUILD_DIR
          cd $BUILD_DIR
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Profile \
            -DCI_COMMIT_TAG=$CI_COMMIT_TAG \
            -DCI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA
      - name: Build tip binaries
        run: |
            cd $BUILD_DIR
            ninja install
      - name: Run tests
        run: ./bin/tests
      - name: Run gcov
        run: |
            gcovr -r . $BUILD_DIR/ -j 4 \
            --exclude-unreachable-branches \
            --exclude-throw-branches \
            --xml ./$CODE_COV_FNAME
            ls $BUILD_DIR
            #- uses: codecov/codecov-action@v2
            #with:
            #token: ${{ secrets.CODECOV_IO_TOKEN }}
            #files: ./${{ env.CODE_COV_FNAME }}
            #flags: unittests
            #fail_ci_if_error: true
            #verbose: true
      - uses: slavcodev/coverage-monitor-action@v1 
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          coverage_path: ./${{ env.CODE_COV_FNAME }}
          threshold_warning: 90
          threshold_alert: 80
          threshold_metric: 'Lines'
