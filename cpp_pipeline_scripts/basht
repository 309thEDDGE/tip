#/bin/env bash
# Copyright (C) 2015 Jeff Lindsay

# Permission is hereby granted, free of charge, to any person obtaining a copy of 
# this software and associated documentation files (the "Software"), to deal in the 
# Software without restriction, including without limitation the rights to use, copy, 
# modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, 
# and to permit persons to whom the Software is furnished to do so, subject to the 
# following conditions:

# The above copyright notice and this permission notice shall be included in all 
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS 
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION 
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

__contains() {
	local e; for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done; return 1
}

__failMacro() {
	local line="$1"; shift
	__test_status=1
	__test_message="$line: $*"
}
readonly T_fail='eval __failMacro $BASH_SOURCE:$LINENO'

main() {
	local run failed start stop duration
	declare -a processed
	run=0
	failed=0
	for file in "$@"; do
		source "$file"
		for t in $(declare -F | grep 'declare -f T_' | awk '{print $3}'); do
			if ! __contains "$t" "${processed[@]}"; then
				unset __test_status __test_message
				echo "=== RUN $t"
				start="$SECONDS"
				$t
				__test_status=${__test_status:-$?}
				stop="$SECONDS"
				duration=$((stop-start))
				processed+=("$t")
				run=$((run+1))
				if [[ "$__test_status" == 0 ]]; then
					echo "--- PASS $t (${duration}s)"
				else
					failed=$((failed+1))
					echo "--- FAIL $t (${duration}s)"
					if [[ "$__test_message" ]]; then
						echo "    $__test_message"
						echo
					fi
				fi
			fi
		done
	done
	echo
	if [[ "$failed" == "0" ]]; then
		echo "Ran $run tests."
		echo
		echo "PASS"
	else
		echo "Ran $run tests. $failed failed."
		echo
		echo "FAIL"
		exit $failed
	fi
}

# Add a call to main to make this a stand-alone script (Rick Haws 2020)
main "$@"